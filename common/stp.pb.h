// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stp.proto

#ifndef PROTOBUF_stp_2eproto__INCLUDED
#define PROTOBUF_stp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "protocol.pb.h"
// @@protoc_insertion_point(includes)

namespace OstProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_stp_2eproto();
void protobuf_AssignDesc_stp_2eproto();
void protobuf_ShutdownFile_stp_2eproto();

class Stp;

// ===================================================================

class Stp : public ::google::protobuf::Message {
 public:
  Stp();
  virtual ~Stp();

  Stp(const Stp& from);

  inline Stp& operator=(const Stp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp& default_instance();

  void Swap(Stp* other);

  // implements Message ----------------------------------------------

  Stp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stp& from);
  void MergeFrom(const Stp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 protocol_identifier = 1 [default = 0];
  inline bool has_protocol_identifier() const;
  inline void clear_protocol_identifier();
  static const int kProtocolIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint32 protocol_identifier() const;
  inline void set_protocol_identifier(::google::protobuf::uint32 value);

  // optional uint32 protocol_version_identifier = 2 [default = 0];
  inline bool has_protocol_version_identifier() const;
  inline void clear_protocol_version_identifier();
  static const int kProtocolVersionIdentifierFieldNumber = 2;
  inline ::google::protobuf::uint32 protocol_version_identifier() const;
  inline void set_protocol_version_identifier(::google::protobuf::uint32 value);

  // optional uint32 protocol_bpdu_type = 3 [default = 0];
  inline bool has_protocol_bpdu_type() const;
  inline void clear_protocol_bpdu_type();
  static const int kProtocolBpduTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 protocol_bpdu_type() const;
  inline void set_protocol_bpdu_type(::google::protobuf::uint32 value);

  // optional uint32 protocol_flags = 4;
  inline bool has_protocol_flags() const;
  inline void clear_protocol_flags();
  static const int kProtocolFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 protocol_flags() const;
  inline void set_protocol_flags(::google::protobuf::uint32 value);

  // optional uint32 protocol_root_system_id_extension = 5;
  inline bool has_protocol_root_system_id_extension() const;
  inline void clear_protocol_root_system_id_extension();
  static const int kProtocolRootSystemIdExtensionFieldNumber = 5;
  inline ::google::protobuf::uint32 protocol_root_system_id_extension() const;
  inline void set_protocol_root_system_id_extension(::google::protobuf::uint32 value);

  // optional uint64 protocol_root_system_id = 6;
  inline bool has_protocol_root_system_id() const;
  inline void clear_protocol_root_system_id();
  static const int kProtocolRootSystemIdFieldNumber = 6;
  inline ::google::protobuf::uint64 protocol_root_system_id() const;
  inline void set_protocol_root_system_id(::google::protobuf::uint64 value);

  // optional uint64 protocol_root_path_cost = 7;
  inline bool has_protocol_root_path_cost() const;
  inline void clear_protocol_root_path_cost();
  static const int kProtocolRootPathCostFieldNumber = 7;
  inline ::google::protobuf::uint64 protocol_root_path_cost() const;
  inline void set_protocol_root_path_cost(::google::protobuf::uint64 value);

  // optional uint32 protocol_bridge_identifier_id_extension = 8;
  inline bool has_protocol_bridge_identifier_id_extension() const;
  inline void clear_protocol_bridge_identifier_id_extension();
  static const int kProtocolBridgeIdentifierIdExtensionFieldNumber = 8;
  inline ::google::protobuf::uint32 protocol_bridge_identifier_id_extension() const;
  inline void set_protocol_bridge_identifier_id_extension(::google::protobuf::uint32 value);

  // optional uint64 protocol_bridge_identifier_id = 9;
  inline bool has_protocol_bridge_identifier_id() const;
  inline void clear_protocol_bridge_identifier_id();
  static const int kProtocolBridgeIdentifierIdFieldNumber = 9;
  inline ::google::protobuf::uint64 protocol_bridge_identifier_id() const;
  inline void set_protocol_bridge_identifier_id(::google::protobuf::uint64 value);

  // optional uint32 protocol_port_identifier = 10;
  inline bool has_protocol_port_identifier() const;
  inline void clear_protocol_port_identifier();
  static const int kProtocolPortIdentifierFieldNumber = 10;
  inline ::google::protobuf::uint32 protocol_port_identifier() const;
  inline void set_protocol_port_identifier(::google::protobuf::uint32 value);

  // optional uint32 protocol_message_age = 11;
  inline bool has_protocol_message_age() const;
  inline void clear_protocol_message_age();
  static const int kProtocolMessageAgeFieldNumber = 11;
  inline ::google::protobuf::uint32 protocol_message_age() const;
  inline void set_protocol_message_age(::google::protobuf::uint32 value);

  // optional uint32 protocol_max_age = 12;
  inline bool has_protocol_max_age() const;
  inline void clear_protocol_max_age();
  static const int kProtocolMaxAgeFieldNumber = 12;
  inline ::google::protobuf::uint32 protocol_max_age() const;
  inline void set_protocol_max_age(::google::protobuf::uint32 value);

  // optional uint32 protocol_hello_time = 13;
  inline bool has_protocol_hello_time() const;
  inline void clear_protocol_hello_time();
  static const int kProtocolHelloTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 protocol_hello_time() const;
  inline void set_protocol_hello_time(::google::protobuf::uint32 value);

  // optional uint32 protocol_forward_delay = 14;
  inline bool has_protocol_forward_delay() const;
  inline void clear_protocol_forward_delay();
  static const int kProtocolForwardDelayFieldNumber = 14;
  inline ::google::protobuf::uint32 protocol_forward_delay() const;
  inline void set_protocol_forward_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OstProto.Stp)
 private:
  inline void set_has_protocol_identifier();
  inline void clear_has_protocol_identifier();
  inline void set_has_protocol_version_identifier();
  inline void clear_has_protocol_version_identifier();
  inline void set_has_protocol_bpdu_type();
  inline void clear_has_protocol_bpdu_type();
  inline void set_has_protocol_flags();
  inline void clear_has_protocol_flags();
  inline void set_has_protocol_root_system_id_extension();
  inline void clear_has_protocol_root_system_id_extension();
  inline void set_has_protocol_root_system_id();
  inline void clear_has_protocol_root_system_id();
  inline void set_has_protocol_root_path_cost();
  inline void clear_has_protocol_root_path_cost();
  inline void set_has_protocol_bridge_identifier_id_extension();
  inline void clear_has_protocol_bridge_identifier_id_extension();
  inline void set_has_protocol_bridge_identifier_id();
  inline void clear_has_protocol_bridge_identifier_id();
  inline void set_has_protocol_port_identifier();
  inline void clear_has_protocol_port_identifier();
  inline void set_has_protocol_message_age();
  inline void clear_has_protocol_message_age();
  inline void set_has_protocol_max_age();
  inline void clear_has_protocol_max_age();
  inline void set_has_protocol_hello_time();
  inline void clear_has_protocol_hello_time();
  inline void set_has_protocol_forward_delay();
  inline void clear_has_protocol_forward_delay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 protocol_identifier_;
  ::google::protobuf::uint32 protocol_version_identifier_;
  ::google::protobuf::uint32 protocol_bpdu_type_;
  ::google::protobuf::uint32 protocol_flags_;
  ::google::protobuf::uint64 protocol_root_system_id_;
  ::google::protobuf::uint32 protocol_root_system_id_extension_;
  ::google::protobuf::uint32 protocol_bridge_identifier_id_extension_;
  ::google::protobuf::uint64 protocol_root_path_cost_;
  ::google::protobuf::uint64 protocol_bridge_identifier_id_;
  ::google::protobuf::uint32 protocol_port_identifier_;
  ::google::protobuf::uint32 protocol_message_age_;
  ::google::protobuf::uint32 protocol_max_age_;
  ::google::protobuf::uint32 protocol_hello_time_;
  ::google::protobuf::uint32 protocol_forward_delay_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_stp_2eproto();
  friend void protobuf_AssignDesc_stp_2eproto();
  friend void protobuf_ShutdownFile_stp_2eproto();

  void InitAsDefaultInstance();
  static Stp* default_instance_;
};
// ===================================================================

static const int kStpFieldNumber = 209;
extern ::google::protobuf::internal::ExtensionIdentifier< ::OstProto::Protocol,
    ::google::protobuf::internal::MessageTypeTraits< ::OstProto::Stp >, 11, false >
  stp;

// ===================================================================

// Stp

// optional uint32 protocol_identifier = 1 [default = 0];
inline bool Stp::has_protocol_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stp::set_has_protocol_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stp::clear_has_protocol_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stp::clear_protocol_identifier() {
  protocol_identifier_ = 0u;
  clear_has_protocol_identifier();
}
inline ::google::protobuf::uint32 Stp::protocol_identifier() const {
  return protocol_identifier_;
}
inline void Stp::set_protocol_identifier(::google::protobuf::uint32 value) {
  set_has_protocol_identifier();
  protocol_identifier_ = value;
}

// optional uint32 protocol_version_identifier = 2 [default = 0];
inline bool Stp::has_protocol_version_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Stp::set_has_protocol_version_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Stp::clear_has_protocol_version_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Stp::clear_protocol_version_identifier() {
  protocol_version_identifier_ = 0u;
  clear_has_protocol_version_identifier();
}
inline ::google::protobuf::uint32 Stp::protocol_version_identifier() const {
  return protocol_version_identifier_;
}
inline void Stp::set_protocol_version_identifier(::google::protobuf::uint32 value) {
  set_has_protocol_version_identifier();
  protocol_version_identifier_ = value;
}

// optional uint32 protocol_bpdu_type = 3 [default = 0];
inline bool Stp::has_protocol_bpdu_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Stp::set_has_protocol_bpdu_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Stp::clear_has_protocol_bpdu_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Stp::clear_protocol_bpdu_type() {
  protocol_bpdu_type_ = 0u;
  clear_has_protocol_bpdu_type();
}
inline ::google::protobuf::uint32 Stp::protocol_bpdu_type() const {
  return protocol_bpdu_type_;
}
inline void Stp::set_protocol_bpdu_type(::google::protobuf::uint32 value) {
  set_has_protocol_bpdu_type();
  protocol_bpdu_type_ = value;
}

// optional uint32 protocol_flags = 4;
inline bool Stp::has_protocol_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Stp::set_has_protocol_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Stp::clear_has_protocol_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Stp::clear_protocol_flags() {
  protocol_flags_ = 0u;
  clear_has_protocol_flags();
}
inline ::google::protobuf::uint32 Stp::protocol_flags() const {
  return protocol_flags_;
}
inline void Stp::set_protocol_flags(::google::protobuf::uint32 value) {
  set_has_protocol_flags();
  protocol_flags_ = value;
}

// optional uint32 protocol_root_system_id_extension = 5;
inline bool Stp::has_protocol_root_system_id_extension() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Stp::set_has_protocol_root_system_id_extension() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Stp::clear_has_protocol_root_system_id_extension() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Stp::clear_protocol_root_system_id_extension() {
  protocol_root_system_id_extension_ = 0u;
  clear_has_protocol_root_system_id_extension();
}
inline ::google::protobuf::uint32 Stp::protocol_root_system_id_extension() const {
  return protocol_root_system_id_extension_;
}
inline void Stp::set_protocol_root_system_id_extension(::google::protobuf::uint32 value) {
  set_has_protocol_root_system_id_extension();
  protocol_root_system_id_extension_ = value;
}

// optional uint64 protocol_root_system_id = 6;
inline bool Stp::has_protocol_root_system_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Stp::set_has_protocol_root_system_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Stp::clear_has_protocol_root_system_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Stp::clear_protocol_root_system_id() {
  protocol_root_system_id_ = GOOGLE_ULONGLONG(0);
  clear_has_protocol_root_system_id();
}
inline ::google::protobuf::uint64 Stp::protocol_root_system_id() const {
  return protocol_root_system_id_;
}
inline void Stp::set_protocol_root_system_id(::google::protobuf::uint64 value) {
  set_has_protocol_root_system_id();
  protocol_root_system_id_ = value;
}

// optional uint64 protocol_root_path_cost = 7;
inline bool Stp::has_protocol_root_path_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Stp::set_has_protocol_root_path_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Stp::clear_has_protocol_root_path_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Stp::clear_protocol_root_path_cost() {
  protocol_root_path_cost_ = GOOGLE_ULONGLONG(0);
  clear_has_protocol_root_path_cost();
}
inline ::google::protobuf::uint64 Stp::protocol_root_path_cost() const {
  return protocol_root_path_cost_;
}
inline void Stp::set_protocol_root_path_cost(::google::protobuf::uint64 value) {
  set_has_protocol_root_path_cost();
  protocol_root_path_cost_ = value;
}

// optional uint32 protocol_bridge_identifier_id_extension = 8;
inline bool Stp::has_protocol_bridge_identifier_id_extension() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Stp::set_has_protocol_bridge_identifier_id_extension() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Stp::clear_has_protocol_bridge_identifier_id_extension() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Stp::clear_protocol_bridge_identifier_id_extension() {
  protocol_bridge_identifier_id_extension_ = 0u;
  clear_has_protocol_bridge_identifier_id_extension();
}
inline ::google::protobuf::uint32 Stp::protocol_bridge_identifier_id_extension() const {
  return protocol_bridge_identifier_id_extension_;
}
inline void Stp::set_protocol_bridge_identifier_id_extension(::google::protobuf::uint32 value) {
  set_has_protocol_bridge_identifier_id_extension();
  protocol_bridge_identifier_id_extension_ = value;
}

// optional uint64 protocol_bridge_identifier_id = 9;
inline bool Stp::has_protocol_bridge_identifier_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Stp::set_has_protocol_bridge_identifier_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Stp::clear_has_protocol_bridge_identifier_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Stp::clear_protocol_bridge_identifier_id() {
  protocol_bridge_identifier_id_ = GOOGLE_ULONGLONG(0);
  clear_has_protocol_bridge_identifier_id();
}
inline ::google::protobuf::uint64 Stp::protocol_bridge_identifier_id() const {
  return protocol_bridge_identifier_id_;
}
inline void Stp::set_protocol_bridge_identifier_id(::google::protobuf::uint64 value) {
  set_has_protocol_bridge_identifier_id();
  protocol_bridge_identifier_id_ = value;
}

// optional uint32 protocol_port_identifier = 10;
inline bool Stp::has_protocol_port_identifier() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Stp::set_has_protocol_port_identifier() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Stp::clear_has_protocol_port_identifier() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Stp::clear_protocol_port_identifier() {
  protocol_port_identifier_ = 0u;
  clear_has_protocol_port_identifier();
}
inline ::google::protobuf::uint32 Stp::protocol_port_identifier() const {
  return protocol_port_identifier_;
}
inline void Stp::set_protocol_port_identifier(::google::protobuf::uint32 value) {
  set_has_protocol_port_identifier();
  protocol_port_identifier_ = value;
}

// optional uint32 protocol_message_age = 11;
inline bool Stp::has_protocol_message_age() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Stp::set_has_protocol_message_age() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Stp::clear_has_protocol_message_age() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Stp::clear_protocol_message_age() {
  protocol_message_age_ = 0u;
  clear_has_protocol_message_age();
}
inline ::google::protobuf::uint32 Stp::protocol_message_age() const {
  return protocol_message_age_;
}
inline void Stp::set_protocol_message_age(::google::protobuf::uint32 value) {
  set_has_protocol_message_age();
  protocol_message_age_ = value;
}

// optional uint32 protocol_max_age = 12;
inline bool Stp::has_protocol_max_age() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Stp::set_has_protocol_max_age() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Stp::clear_has_protocol_max_age() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Stp::clear_protocol_max_age() {
  protocol_max_age_ = 0u;
  clear_has_protocol_max_age();
}
inline ::google::protobuf::uint32 Stp::protocol_max_age() const {
  return protocol_max_age_;
}
inline void Stp::set_protocol_max_age(::google::protobuf::uint32 value) {
  set_has_protocol_max_age();
  protocol_max_age_ = value;
}

// optional uint32 protocol_hello_time = 13;
inline bool Stp::has_protocol_hello_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Stp::set_has_protocol_hello_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Stp::clear_has_protocol_hello_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Stp::clear_protocol_hello_time() {
  protocol_hello_time_ = 0u;
  clear_has_protocol_hello_time();
}
inline ::google::protobuf::uint32 Stp::protocol_hello_time() const {
  return protocol_hello_time_;
}
inline void Stp::set_protocol_hello_time(::google::protobuf::uint32 value) {
  set_has_protocol_hello_time();
  protocol_hello_time_ = value;
}

// optional uint32 protocol_forward_delay = 14;
inline bool Stp::has_protocol_forward_delay() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Stp::set_has_protocol_forward_delay() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Stp::clear_has_protocol_forward_delay() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Stp::clear_protocol_forward_delay() {
  protocol_forward_delay_ = 0u;
  clear_has_protocol_forward_delay();
}
inline ::google::protobuf::uint32 Stp::protocol_forward_delay() const {
  return protocol_forward_delay_;
}
inline void Stp::set_protocol_forward_delay(::google::protobuf::uint32 value) {
  set_has_protocol_forward_delay();
  protocol_forward_delay_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stp_2eproto__INCLUDED
