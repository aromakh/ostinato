// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lacp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lacp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace OstProto {

namespace {

const ::google::protobuf::Descriptor* Lacp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Lacp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_lacp_2eproto() {
  protobuf_AddDesc_lacp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lacp.proto");
  GOOGLE_CHECK(file != NULL);
  Lacp_descriptor_ = file->message_type(0);
  static const int Lacp_offsets_[45] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_subtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_ver_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_tlv_typea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_act_info_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_act_sys_prior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_asys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_akey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_aport_prior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_aport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_astate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_areserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_tlv_typep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_par_info_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_pstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_par_sys_prior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_psys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_pkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_pport_prior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_pport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_preserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_tlv_typec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_coll_info_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_collmaxdelay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_creserved0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_creserved1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_tlv_typeterm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_term_len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_reserved6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_fcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_subtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_tlv_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_actor_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_tlv_p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_partner_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_tlv_c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_collector_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_tlv_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, proto_is_terminator_len_),
  };
  Lacp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Lacp_descriptor_,
      Lacp::default_instance_,
      Lacp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lacp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Lacp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lacp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Lacp_descriptor_, &Lacp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lacp_2eproto() {
  delete Lacp::default_instance_;
  delete Lacp_reflection_;
}

void protobuf_AddDesc_lacp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::OstProto::protobuf_AddDesc_protocol_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nlacp.proto\022\010OstProto\032\016protocol.proto\"\271"
    "\t\n\004Lacp\022\030\n\rproto_subtype\030\001 \001(\r:\0011\022\030\n\rpro"
    "to_ver_num\030\002 \001(\r:\0011\022\032\n\017proto_TLV_typeA\030\003"
    " \001(\r:\0011\022\036\n\022proto_Act_info_len\030\004 \001(\r:\00220\022"
    "\033\n\023proto_Act_sys_prior\030\005 \001(\r\022\022\n\nproto_As"
    "ys\030\006 \001(\004\022\022\n\nproto_Akey\030\007 \001(\r\022\031\n\021proto_Ap"
    "ort_prior\030\010 \001(\r\022\023\n\013proto_Aport\030\t \001(\r\022\024\n\014"
    "proto_Astate\030\n \001(\r\022\032\n\017proto_Areserved\030\013 "
    "\001(\r:\0010\022\032\n\017proto_TLV_typeP\030\014 \001(\r:\0012\022\036\n\022pr"
    "oto_Par_info_len\030\r \001(\r:\00220\022\024\n\014proto_Psta"
    "te\030\016 \001(\r\022\033\n\023proto_Par_sys_prior\030\017 \001(\r\022\022\n"
    "\nproto_Psys\030\020 \001(\004\022\022\n\nproto_Pkey\030\021 \001(\r\022\031\n"
    "\021proto_Pport_prior\030\022 \001(\r\022\023\n\013proto_Pport\030"
    "\023 \001(\r\022\032\n\017proto_Preserved\030\024 \001(\r:\0010\022\032\n\017pro"
    "to_TLV_typeC\030\025 \001(\r:\0013\022\037\n\023proto_Coll_info"
    "_len\030\026 \001(\r:\00216\022\032\n\022proto_CollMaxDelay\030\027 \001"
    "(\r\022\033\n\020proto_Creserved0\030\030 \001(\004:\0010\022\033\n\020proto"
    "_Creserved1\030\031 \001(\004:\0010\022\035\n\022proto_TLV_typeTe"
    "rm\030\032 \001(\r:\0010\022\031\n\016proto_Term_len\030\033 \001(\r:\0010\022\032"
    "\n\017proto_reserved0\030\034 \001(\004:\0010\022\032\n\017proto_rese"
    "rved1\030\035 \001(\004:\0010\022\032\n\017proto_reserved2\030\036 \001(\004:"
    "\0010\022\032\n\017proto_reserved3\030\037 \001(\004:\0010\022\032\n\017proto_"
    "reserved4\030  \001(\004:\0010\022\032\n\017proto_reserved5\030! "
    "\001(\004:\0010\022\032\n\017proto_reserved6\030\" \001(\004:\0010\022\024\n\tpr"
    "oto_FCS\030# \001(\004:\0010\022\030\n\020proto_is_subtype\030$ \001"
    "(\010\022\030\n\020proto_is_version\030% \001(\010\022\026\n\016proto_is"
    "_tlv_a\030& \001(\010\022\033\n\023proto_is_actor_info\030\' \001("
    "\010\022\026\n\016proto_is_tlv_p\030( \001(\010\022\035\n\025proto_is_pa"
    "rtner_info\030) \001(\010\022\026\n\016proto_is_tlv_c\030* \001(\010"
    "\022\037\n\027proto_is_collector_info\030+ \001(\010\022\026\n\016pro"
    "to_is_tlv_t\030, \001(\010\022\037\n\027proto_is_terminator"
    "_len\030- \001(\010:1\n\004lacp\022\022.OstProto.Protocol\030\253"
    "\002 \001(\0132\016.OstProto.Lacp", 1301);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lacp.proto", &protobuf_RegisterTypes);
  Lacp::default_instance_ = new Lacp();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::OstProto::Protocol::default_instance(),
    299, 11, false, false,
    &::OstProto::Lacp::default_instance());
  Lacp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lacp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lacp_2eproto {
  StaticDescriptorInitializer_lacp_2eproto() {
    protobuf_AddDesc_lacp_2eproto();
  }
} static_descriptor_initializer_lacp_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Lacp::kProtoSubtypeFieldNumber;
const int Lacp::kProtoVerNumFieldNumber;
const int Lacp::kProtoTLVTypeAFieldNumber;
const int Lacp::kProtoActInfoLenFieldNumber;
const int Lacp::kProtoActSysPriorFieldNumber;
const int Lacp::kProtoAsysFieldNumber;
const int Lacp::kProtoAkeyFieldNumber;
const int Lacp::kProtoAportPriorFieldNumber;
const int Lacp::kProtoAportFieldNumber;
const int Lacp::kProtoAstateFieldNumber;
const int Lacp::kProtoAreservedFieldNumber;
const int Lacp::kProtoTLVTypePFieldNumber;
const int Lacp::kProtoParInfoLenFieldNumber;
const int Lacp::kProtoPstateFieldNumber;
const int Lacp::kProtoParSysPriorFieldNumber;
const int Lacp::kProtoPsysFieldNumber;
const int Lacp::kProtoPkeyFieldNumber;
const int Lacp::kProtoPportPriorFieldNumber;
const int Lacp::kProtoPportFieldNumber;
const int Lacp::kProtoPreservedFieldNumber;
const int Lacp::kProtoTLVTypeCFieldNumber;
const int Lacp::kProtoCollInfoLenFieldNumber;
const int Lacp::kProtoCollMaxDelayFieldNumber;
const int Lacp::kProtoCreserved0FieldNumber;
const int Lacp::kProtoCreserved1FieldNumber;
const int Lacp::kProtoTLVTypeTermFieldNumber;
const int Lacp::kProtoTermLenFieldNumber;
const int Lacp::kProtoReserved0FieldNumber;
const int Lacp::kProtoReserved1FieldNumber;
const int Lacp::kProtoReserved2FieldNumber;
const int Lacp::kProtoReserved3FieldNumber;
const int Lacp::kProtoReserved4FieldNumber;
const int Lacp::kProtoReserved5FieldNumber;
const int Lacp::kProtoReserved6FieldNumber;
const int Lacp::kProtoFCSFieldNumber;
const int Lacp::kProtoIsSubtypeFieldNumber;
const int Lacp::kProtoIsVersionFieldNumber;
const int Lacp::kProtoIsTlvAFieldNumber;
const int Lacp::kProtoIsActorInfoFieldNumber;
const int Lacp::kProtoIsTlvPFieldNumber;
const int Lacp::kProtoIsPartnerInfoFieldNumber;
const int Lacp::kProtoIsTlvCFieldNumber;
const int Lacp::kProtoIsCollectorInfoFieldNumber;
const int Lacp::kProtoIsTlvTFieldNumber;
const int Lacp::kProtoIsTerminatorLenFieldNumber;
#endif  // !_MSC_VER

Lacp::Lacp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Lacp::InitAsDefaultInstance() {
}

Lacp::Lacp(const Lacp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Lacp::SharedCtor() {
  _cached_size_ = 0;
  proto_subtype_ = 1u;
  proto_ver_num_ = 1u;
  proto_tlv_typea_ = 1u;
  proto_act_info_len_ = 20u;
  proto_act_sys_prior_ = 0u;
  proto_asys_ = GOOGLE_ULONGLONG(0);
  proto_akey_ = 0u;
  proto_aport_prior_ = 0u;
  proto_aport_ = 0u;
  proto_astate_ = 0u;
  proto_areserved_ = 0u;
  proto_tlv_typep_ = 2u;
  proto_par_info_len_ = 20u;
  proto_pstate_ = 0u;
  proto_par_sys_prior_ = 0u;
  proto_psys_ = GOOGLE_ULONGLONG(0);
  proto_pkey_ = 0u;
  proto_pport_prior_ = 0u;
  proto_pport_ = 0u;
  proto_preserved_ = 0u;
  proto_tlv_typec_ = 3u;
  proto_coll_info_len_ = 16u;
  proto_collmaxdelay_ = 0u;
  proto_creserved0_ = GOOGLE_ULONGLONG(0);
  proto_creserved1_ = GOOGLE_ULONGLONG(0);
  proto_tlv_typeterm_ = 0u;
  proto_term_len_ = 0u;
  proto_reserved0_ = GOOGLE_ULONGLONG(0);
  proto_reserved1_ = GOOGLE_ULONGLONG(0);
  proto_reserved2_ = GOOGLE_ULONGLONG(0);
  proto_reserved3_ = GOOGLE_ULONGLONG(0);
  proto_reserved4_ = GOOGLE_ULONGLONG(0);
  proto_reserved5_ = GOOGLE_ULONGLONG(0);
  proto_reserved6_ = GOOGLE_ULONGLONG(0);
  proto_fcs_ = GOOGLE_ULONGLONG(0);
  proto_is_subtype_ = false;
  proto_is_version_ = false;
  proto_is_tlv_a_ = false;
  proto_is_actor_info_ = false;
  proto_is_tlv_p_ = false;
  proto_is_partner_info_ = false;
  proto_is_tlv_c_ = false;
  proto_is_collector_info_ = false;
  proto_is_tlv_t_ = false;
  proto_is_terminator_len_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Lacp::~Lacp() {
  SharedDtor();
}

void Lacp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Lacp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Lacp_descriptor_;
}

const Lacp& Lacp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lacp_2eproto();
  return *default_instance_;
}

Lacp* Lacp::default_instance_ = NULL;

Lacp* Lacp::New() const {
  return new Lacp;
}

void Lacp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    proto_subtype_ = 1u;
    proto_ver_num_ = 1u;
    proto_tlv_typea_ = 1u;
    proto_act_info_len_ = 20u;
    proto_act_sys_prior_ = 0u;
    proto_asys_ = GOOGLE_ULONGLONG(0);
    proto_akey_ = 0u;
    proto_aport_prior_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    proto_aport_ = 0u;
    proto_astate_ = 0u;
    proto_areserved_ = 0u;
    proto_tlv_typep_ = 2u;
    proto_par_info_len_ = 20u;
    proto_pstate_ = 0u;
    proto_par_sys_prior_ = 0u;
    proto_psys_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    proto_pkey_ = 0u;
    proto_pport_prior_ = 0u;
    proto_pport_ = 0u;
    proto_preserved_ = 0u;
    proto_tlv_typec_ = 3u;
    proto_coll_info_len_ = 16u;
    proto_collmaxdelay_ = 0u;
    proto_creserved0_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    proto_creserved1_ = GOOGLE_ULONGLONG(0);
    proto_tlv_typeterm_ = 0u;
    proto_term_len_ = 0u;
    proto_reserved0_ = GOOGLE_ULONGLONG(0);
    proto_reserved1_ = GOOGLE_ULONGLONG(0);
    proto_reserved2_ = GOOGLE_ULONGLONG(0);
    proto_reserved3_ = GOOGLE_ULONGLONG(0);
    proto_reserved4_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    proto_reserved5_ = GOOGLE_ULONGLONG(0);
    proto_reserved6_ = GOOGLE_ULONGLONG(0);
    proto_fcs_ = GOOGLE_ULONGLONG(0);
    proto_is_subtype_ = false;
    proto_is_version_ = false;
    proto_is_tlv_a_ = false;
    proto_is_actor_info_ = false;
    proto_is_tlv_p_ = false;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    proto_is_partner_info_ = false;
    proto_is_tlv_c_ = false;
    proto_is_collector_info_ = false;
    proto_is_tlv_t_ = false;
    proto_is_terminator_len_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Lacp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 proto_subtype = 1 [default = 1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_subtype_)));
          set_has_proto_subtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_proto_ver_num;
        break;
      }

      // optional uint32 proto_ver_num = 2 [default = 1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_ver_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_ver_num_)));
          set_has_proto_ver_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_proto_TLV_typeA;
        break;
      }

      // optional uint32 proto_TLV_typeA = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_TLV_typeA:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_tlv_typea_)));
          set_has_proto_tlv_typea();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_proto_Act_info_len;
        break;
      }

      // optional uint32 proto_Act_info_len = 4 [default = 20];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Act_info_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_act_info_len_)));
          set_has_proto_act_info_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_proto_Act_sys_prior;
        break;
      }

      // optional uint32 proto_Act_sys_prior = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Act_sys_prior:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_act_sys_prior_)));
          set_has_proto_act_sys_prior();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_proto_Asys;
        break;
      }

      // optional uint64 proto_Asys = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Asys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_asys_)));
          set_has_proto_asys();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_proto_Akey;
        break;
      }

      // optional uint32 proto_Akey = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Akey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_akey_)));
          set_has_proto_akey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_proto_Aport_prior;
        break;
      }

      // optional uint32 proto_Aport_prior = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Aport_prior:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_aport_prior_)));
          set_has_proto_aport_prior();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_proto_Aport;
        break;
      }

      // optional uint32 proto_Aport = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Aport:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_aport_)));
          set_has_proto_aport();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_proto_Astate;
        break;
      }

      // optional uint32 proto_Astate = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Astate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_astate_)));
          set_has_proto_astate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_proto_Areserved;
        break;
      }

      // optional uint32 proto_Areserved = 11 [default = 0];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Areserved:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_areserved_)));
          set_has_proto_areserved();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_proto_TLV_typeP;
        break;
      }

      // optional uint32 proto_TLV_typeP = 12 [default = 2];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_TLV_typeP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_tlv_typep_)));
          set_has_proto_tlv_typep();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_proto_Par_info_len;
        break;
      }

      // optional uint32 proto_Par_info_len = 13 [default = 20];
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Par_info_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_par_info_len_)));
          set_has_proto_par_info_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_proto_Pstate;
        break;
      }

      // optional uint32 proto_Pstate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Pstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_pstate_)));
          set_has_proto_pstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_proto_Par_sys_prior;
        break;
      }

      // optional uint32 proto_Par_sys_prior = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Par_sys_prior:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_par_sys_prior_)));
          set_has_proto_par_sys_prior();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_proto_Psys;
        break;
      }

      // optional uint64 proto_Psys = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Psys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_psys_)));
          set_has_proto_psys();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_proto_Pkey;
        break;
      }

      // optional uint32 proto_Pkey = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Pkey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_pkey_)));
          set_has_proto_pkey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_proto_Pport_prior;
        break;
      }

      // optional uint32 proto_Pport_prior = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Pport_prior:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_pport_prior_)));
          set_has_proto_pport_prior();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_proto_Pport;
        break;
      }

      // optional uint32 proto_Pport = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Pport:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_pport_)));
          set_has_proto_pport();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_proto_Preserved;
        break;
      }

      // optional uint32 proto_Preserved = 20 [default = 0];
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Preserved:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_preserved_)));
          set_has_proto_preserved();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_proto_TLV_typeC;
        break;
      }

      // optional uint32 proto_TLV_typeC = 21 [default = 3];
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_TLV_typeC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_tlv_typec_)));
          set_has_proto_tlv_typec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_proto_Coll_info_len;
        break;
      }

      // optional uint32 proto_Coll_info_len = 22 [default = 16];
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Coll_info_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_coll_info_len_)));
          set_has_proto_coll_info_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_proto_CollMaxDelay;
        break;
      }

      // optional uint32 proto_CollMaxDelay = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_CollMaxDelay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_collmaxdelay_)));
          set_has_proto_collmaxdelay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_proto_Creserved0;
        break;
      }

      // optional uint64 proto_Creserved0 = 24 [default = 0];
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Creserved0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_creserved0_)));
          set_has_proto_creserved0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_proto_Creserved1;
        break;
      }

      // optional uint64 proto_Creserved1 = 25 [default = 0];
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Creserved1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_creserved1_)));
          set_has_proto_creserved1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_proto_TLV_typeTerm;
        break;
      }

      // optional uint32 proto_TLV_typeTerm = 26 [default = 0];
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_TLV_typeTerm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_tlv_typeterm_)));
          set_has_proto_tlv_typeterm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_proto_Term_len;
        break;
      }

      // optional uint32 proto_Term_len = 27 [default = 0];
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_Term_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proto_term_len_)));
          set_has_proto_term_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_proto_reserved0;
        break;
      }

      // optional uint64 proto_reserved0 = 28 [default = 0];
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved0_)));
          set_has_proto_reserved0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_proto_reserved1;
        break;
      }

      // optional uint64 proto_reserved1 = 29 [default = 0];
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved1_)));
          set_has_proto_reserved1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_proto_reserved2;
        break;
      }

      // optional uint64 proto_reserved2 = 30 [default = 0];
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved2_)));
          set_has_proto_reserved2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_proto_reserved3;
        break;
      }

      // optional uint64 proto_reserved3 = 31 [default = 0];
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved3_)));
          set_has_proto_reserved3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_proto_reserved4;
        break;
      }

      // optional uint64 proto_reserved4 = 32 [default = 0];
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved4_)));
          set_has_proto_reserved4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_proto_reserved5;
        break;
      }

      // optional uint64 proto_reserved5 = 33 [default = 0];
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved5_)));
          set_has_proto_reserved5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_proto_reserved6;
        break;
      }

      // optional uint64 proto_reserved6 = 34 [default = 0];
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_reserved6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_reserved6_)));
          set_has_proto_reserved6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_proto_FCS;
        break;
      }

      // optional uint64 proto_FCS = 35 [default = 0];
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_FCS:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proto_fcs_)));
          set_has_proto_fcs();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_proto_is_subtype;
        break;
      }

      // optional bool proto_is_subtype = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_subtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_subtype_)));
          set_has_proto_is_subtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_proto_is_version;
        break;
      }

      // optional bool proto_is_version = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_version_)));
          set_has_proto_is_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_proto_is_tlv_a;
        break;
      }

      // optional bool proto_is_tlv_a = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_tlv_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_tlv_a_)));
          set_has_proto_is_tlv_a();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_proto_is_actor_info;
        break;
      }

      // optional bool proto_is_actor_info = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_actor_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_actor_info_)));
          set_has_proto_is_actor_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_proto_is_tlv_p;
        break;
      }

      // optional bool proto_is_tlv_p = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_tlv_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_tlv_p_)));
          set_has_proto_is_tlv_p();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_proto_is_partner_info;
        break;
      }

      // optional bool proto_is_partner_info = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_partner_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_partner_info_)));
          set_has_proto_is_partner_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_proto_is_tlv_c;
        break;
      }

      // optional bool proto_is_tlv_c = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_tlv_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_tlv_c_)));
          set_has_proto_is_tlv_c();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_proto_is_collector_info;
        break;
      }

      // optional bool proto_is_collector_info = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_collector_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_collector_info_)));
          set_has_proto_is_collector_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_proto_is_tlv_t;
        break;
      }

      // optional bool proto_is_tlv_t = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_tlv_t:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_tlv_t_)));
          set_has_proto_is_tlv_t();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_proto_is_terminator_len;
        break;
      }

      // optional bool proto_is_terminator_len = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_proto_is_terminator_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proto_is_terminator_len_)));
          set_has_proto_is_terminator_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Lacp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 proto_subtype = 1 [default = 1];
  if (has_proto_subtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->proto_subtype(), output);
  }

  // optional uint32 proto_ver_num = 2 [default = 1];
  if (has_proto_ver_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->proto_ver_num(), output);
  }

  // optional uint32 proto_TLV_typeA = 3 [default = 1];
  if (has_proto_tlv_typea()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->proto_tlv_typea(), output);
  }

  // optional uint32 proto_Act_info_len = 4 [default = 20];
  if (has_proto_act_info_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->proto_act_info_len(), output);
  }

  // optional uint32 proto_Act_sys_prior = 5;
  if (has_proto_act_sys_prior()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->proto_act_sys_prior(), output);
  }

  // optional uint64 proto_Asys = 6;
  if (has_proto_asys()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->proto_asys(), output);
  }

  // optional uint32 proto_Akey = 7;
  if (has_proto_akey()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->proto_akey(), output);
  }

  // optional uint32 proto_Aport_prior = 8;
  if (has_proto_aport_prior()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->proto_aport_prior(), output);
  }

  // optional uint32 proto_Aport = 9;
  if (has_proto_aport()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->proto_aport(), output);
  }

  // optional uint32 proto_Astate = 10;
  if (has_proto_astate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->proto_astate(), output);
  }

  // optional uint32 proto_Areserved = 11 [default = 0];
  if (has_proto_areserved()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->proto_areserved(), output);
  }

  // optional uint32 proto_TLV_typeP = 12 [default = 2];
  if (has_proto_tlv_typep()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->proto_tlv_typep(), output);
  }

  // optional uint32 proto_Par_info_len = 13 [default = 20];
  if (has_proto_par_info_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->proto_par_info_len(), output);
  }

  // optional uint32 proto_Pstate = 14;
  if (has_proto_pstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->proto_pstate(), output);
  }

  // optional uint32 proto_Par_sys_prior = 15;
  if (has_proto_par_sys_prior()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->proto_par_sys_prior(), output);
  }

  // optional uint64 proto_Psys = 16;
  if (has_proto_psys()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->proto_psys(), output);
  }

  // optional uint32 proto_Pkey = 17;
  if (has_proto_pkey()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->proto_pkey(), output);
  }

  // optional uint32 proto_Pport_prior = 18;
  if (has_proto_pport_prior()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->proto_pport_prior(), output);
  }

  // optional uint32 proto_Pport = 19;
  if (has_proto_pport()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->proto_pport(), output);
  }

  // optional uint32 proto_Preserved = 20 [default = 0];
  if (has_proto_preserved()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->proto_preserved(), output);
  }

  // optional uint32 proto_TLV_typeC = 21 [default = 3];
  if (has_proto_tlv_typec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->proto_tlv_typec(), output);
  }

  // optional uint32 proto_Coll_info_len = 22 [default = 16];
  if (has_proto_coll_info_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->proto_coll_info_len(), output);
  }

  // optional uint32 proto_CollMaxDelay = 23;
  if (has_proto_collmaxdelay()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->proto_collmaxdelay(), output);
  }

  // optional uint64 proto_Creserved0 = 24 [default = 0];
  if (has_proto_creserved0()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(24, this->proto_creserved0(), output);
  }

  // optional uint64 proto_Creserved1 = 25 [default = 0];
  if (has_proto_creserved1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(25, this->proto_creserved1(), output);
  }

  // optional uint32 proto_TLV_typeTerm = 26 [default = 0];
  if (has_proto_tlv_typeterm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->proto_tlv_typeterm(), output);
  }

  // optional uint32 proto_Term_len = 27 [default = 0];
  if (has_proto_term_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->proto_term_len(), output);
  }

  // optional uint64 proto_reserved0 = 28 [default = 0];
  if (has_proto_reserved0()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(28, this->proto_reserved0(), output);
  }

  // optional uint64 proto_reserved1 = 29 [default = 0];
  if (has_proto_reserved1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(29, this->proto_reserved1(), output);
  }

  // optional uint64 proto_reserved2 = 30 [default = 0];
  if (has_proto_reserved2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->proto_reserved2(), output);
  }

  // optional uint64 proto_reserved3 = 31 [default = 0];
  if (has_proto_reserved3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->proto_reserved3(), output);
  }

  // optional uint64 proto_reserved4 = 32 [default = 0];
  if (has_proto_reserved4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->proto_reserved4(), output);
  }

  // optional uint64 proto_reserved5 = 33 [default = 0];
  if (has_proto_reserved5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(33, this->proto_reserved5(), output);
  }

  // optional uint64 proto_reserved6 = 34 [default = 0];
  if (has_proto_reserved6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(34, this->proto_reserved6(), output);
  }

  // optional uint64 proto_FCS = 35 [default = 0];
  if (has_proto_fcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(35, this->proto_fcs(), output);
  }

  // optional bool proto_is_subtype = 36;
  if (has_proto_is_subtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(36, this->proto_is_subtype(), output);
  }

  // optional bool proto_is_version = 37;
  if (has_proto_is_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(37, this->proto_is_version(), output);
  }

  // optional bool proto_is_tlv_a = 38;
  if (has_proto_is_tlv_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(38, this->proto_is_tlv_a(), output);
  }

  // optional bool proto_is_actor_info = 39;
  if (has_proto_is_actor_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(39, this->proto_is_actor_info(), output);
  }

  // optional bool proto_is_tlv_p = 40;
  if (has_proto_is_tlv_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->proto_is_tlv_p(), output);
  }

  // optional bool proto_is_partner_info = 41;
  if (has_proto_is_partner_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(41, this->proto_is_partner_info(), output);
  }

  // optional bool proto_is_tlv_c = 42;
  if (has_proto_is_tlv_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(42, this->proto_is_tlv_c(), output);
  }

  // optional bool proto_is_collector_info = 43;
  if (has_proto_is_collector_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->proto_is_collector_info(), output);
  }

  // optional bool proto_is_tlv_t = 44;
  if (has_proto_is_tlv_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(44, this->proto_is_tlv_t(), output);
  }

  // optional bool proto_is_terminator_len = 45;
  if (has_proto_is_terminator_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(45, this->proto_is_terminator_len(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Lacp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 proto_subtype = 1 [default = 1];
  if (has_proto_subtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->proto_subtype(), target);
  }

  // optional uint32 proto_ver_num = 2 [default = 1];
  if (has_proto_ver_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->proto_ver_num(), target);
  }

  // optional uint32 proto_TLV_typeA = 3 [default = 1];
  if (has_proto_tlv_typea()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->proto_tlv_typea(), target);
  }

  // optional uint32 proto_Act_info_len = 4 [default = 20];
  if (has_proto_act_info_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->proto_act_info_len(), target);
  }

  // optional uint32 proto_Act_sys_prior = 5;
  if (has_proto_act_sys_prior()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->proto_act_sys_prior(), target);
  }

  // optional uint64 proto_Asys = 6;
  if (has_proto_asys()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->proto_asys(), target);
  }

  // optional uint32 proto_Akey = 7;
  if (has_proto_akey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->proto_akey(), target);
  }

  // optional uint32 proto_Aport_prior = 8;
  if (has_proto_aport_prior()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->proto_aport_prior(), target);
  }

  // optional uint32 proto_Aport = 9;
  if (has_proto_aport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->proto_aport(), target);
  }

  // optional uint32 proto_Astate = 10;
  if (has_proto_astate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->proto_astate(), target);
  }

  // optional uint32 proto_Areserved = 11 [default = 0];
  if (has_proto_areserved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->proto_areserved(), target);
  }

  // optional uint32 proto_TLV_typeP = 12 [default = 2];
  if (has_proto_tlv_typep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->proto_tlv_typep(), target);
  }

  // optional uint32 proto_Par_info_len = 13 [default = 20];
  if (has_proto_par_info_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->proto_par_info_len(), target);
  }

  // optional uint32 proto_Pstate = 14;
  if (has_proto_pstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->proto_pstate(), target);
  }

  // optional uint32 proto_Par_sys_prior = 15;
  if (has_proto_par_sys_prior()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->proto_par_sys_prior(), target);
  }

  // optional uint64 proto_Psys = 16;
  if (has_proto_psys()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->proto_psys(), target);
  }

  // optional uint32 proto_Pkey = 17;
  if (has_proto_pkey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->proto_pkey(), target);
  }

  // optional uint32 proto_Pport_prior = 18;
  if (has_proto_pport_prior()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->proto_pport_prior(), target);
  }

  // optional uint32 proto_Pport = 19;
  if (has_proto_pport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->proto_pport(), target);
  }

  // optional uint32 proto_Preserved = 20 [default = 0];
  if (has_proto_preserved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->proto_preserved(), target);
  }

  // optional uint32 proto_TLV_typeC = 21 [default = 3];
  if (has_proto_tlv_typec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->proto_tlv_typec(), target);
  }

  // optional uint32 proto_Coll_info_len = 22 [default = 16];
  if (has_proto_coll_info_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->proto_coll_info_len(), target);
  }

  // optional uint32 proto_CollMaxDelay = 23;
  if (has_proto_collmaxdelay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->proto_collmaxdelay(), target);
  }

  // optional uint64 proto_Creserved0 = 24 [default = 0];
  if (has_proto_creserved0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(24, this->proto_creserved0(), target);
  }

  // optional uint64 proto_Creserved1 = 25 [default = 0];
  if (has_proto_creserved1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(25, this->proto_creserved1(), target);
  }

  // optional uint32 proto_TLV_typeTerm = 26 [default = 0];
  if (has_proto_tlv_typeterm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->proto_tlv_typeterm(), target);
  }

  // optional uint32 proto_Term_len = 27 [default = 0];
  if (has_proto_term_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->proto_term_len(), target);
  }

  // optional uint64 proto_reserved0 = 28 [default = 0];
  if (has_proto_reserved0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(28, this->proto_reserved0(), target);
  }

  // optional uint64 proto_reserved1 = 29 [default = 0];
  if (has_proto_reserved1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(29, this->proto_reserved1(), target);
  }

  // optional uint64 proto_reserved2 = 30 [default = 0];
  if (has_proto_reserved2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->proto_reserved2(), target);
  }

  // optional uint64 proto_reserved3 = 31 [default = 0];
  if (has_proto_reserved3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->proto_reserved3(), target);
  }

  // optional uint64 proto_reserved4 = 32 [default = 0];
  if (has_proto_reserved4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->proto_reserved4(), target);
  }

  // optional uint64 proto_reserved5 = 33 [default = 0];
  if (has_proto_reserved5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(33, this->proto_reserved5(), target);
  }

  // optional uint64 proto_reserved6 = 34 [default = 0];
  if (has_proto_reserved6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(34, this->proto_reserved6(), target);
  }

  // optional uint64 proto_FCS = 35 [default = 0];
  if (has_proto_fcs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(35, this->proto_fcs(), target);
  }

  // optional bool proto_is_subtype = 36;
  if (has_proto_is_subtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(36, this->proto_is_subtype(), target);
  }

  // optional bool proto_is_version = 37;
  if (has_proto_is_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(37, this->proto_is_version(), target);
  }

  // optional bool proto_is_tlv_a = 38;
  if (has_proto_is_tlv_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(38, this->proto_is_tlv_a(), target);
  }

  // optional bool proto_is_actor_info = 39;
  if (has_proto_is_actor_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(39, this->proto_is_actor_info(), target);
  }

  // optional bool proto_is_tlv_p = 40;
  if (has_proto_is_tlv_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->proto_is_tlv_p(), target);
  }

  // optional bool proto_is_partner_info = 41;
  if (has_proto_is_partner_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(41, this->proto_is_partner_info(), target);
  }

  // optional bool proto_is_tlv_c = 42;
  if (has_proto_is_tlv_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(42, this->proto_is_tlv_c(), target);
  }

  // optional bool proto_is_collector_info = 43;
  if (has_proto_is_collector_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->proto_is_collector_info(), target);
  }

  // optional bool proto_is_tlv_t = 44;
  if (has_proto_is_tlv_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(44, this->proto_is_tlv_t(), target);
  }

  // optional bool proto_is_terminator_len = 45;
  if (has_proto_is_terminator_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(45, this->proto_is_terminator_len(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Lacp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 proto_subtype = 1 [default = 1];
    if (has_proto_subtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_subtype());
    }

    // optional uint32 proto_ver_num = 2 [default = 1];
    if (has_proto_ver_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_ver_num());
    }

    // optional uint32 proto_TLV_typeA = 3 [default = 1];
    if (has_proto_tlv_typea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_tlv_typea());
    }

    // optional uint32 proto_Act_info_len = 4 [default = 20];
    if (has_proto_act_info_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_act_info_len());
    }

    // optional uint32 proto_Act_sys_prior = 5;
    if (has_proto_act_sys_prior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_act_sys_prior());
    }

    // optional uint64 proto_Asys = 6;
    if (has_proto_asys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_asys());
    }

    // optional uint32 proto_Akey = 7;
    if (has_proto_akey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_akey());
    }

    // optional uint32 proto_Aport_prior = 8;
    if (has_proto_aport_prior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_aport_prior());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 proto_Aport = 9;
    if (has_proto_aport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_aport());
    }

    // optional uint32 proto_Astate = 10;
    if (has_proto_astate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_astate());
    }

    // optional uint32 proto_Areserved = 11 [default = 0];
    if (has_proto_areserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_areserved());
    }

    // optional uint32 proto_TLV_typeP = 12 [default = 2];
    if (has_proto_tlv_typep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_tlv_typep());
    }

    // optional uint32 proto_Par_info_len = 13 [default = 20];
    if (has_proto_par_info_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_par_info_len());
    }

    // optional uint32 proto_Pstate = 14;
    if (has_proto_pstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_pstate());
    }

    // optional uint32 proto_Par_sys_prior = 15;
    if (has_proto_par_sys_prior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_par_sys_prior());
    }

    // optional uint64 proto_Psys = 16;
    if (has_proto_psys()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_psys());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 proto_Pkey = 17;
    if (has_proto_pkey()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_pkey());
    }

    // optional uint32 proto_Pport_prior = 18;
    if (has_proto_pport_prior()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_pport_prior());
    }

    // optional uint32 proto_Pport = 19;
    if (has_proto_pport()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_pport());
    }

    // optional uint32 proto_Preserved = 20 [default = 0];
    if (has_proto_preserved()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_preserved());
    }

    // optional uint32 proto_TLV_typeC = 21 [default = 3];
    if (has_proto_tlv_typec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_tlv_typec());
    }

    // optional uint32 proto_Coll_info_len = 22 [default = 16];
    if (has_proto_coll_info_len()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_coll_info_len());
    }

    // optional uint32 proto_CollMaxDelay = 23;
    if (has_proto_collmaxdelay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_collmaxdelay());
    }

    // optional uint64 proto_Creserved0 = 24 [default = 0];
    if (has_proto_creserved0()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_creserved0());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional uint64 proto_Creserved1 = 25 [default = 0];
    if (has_proto_creserved1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_creserved1());
    }

    // optional uint32 proto_TLV_typeTerm = 26 [default = 0];
    if (has_proto_tlv_typeterm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_tlv_typeterm());
    }

    // optional uint32 proto_Term_len = 27 [default = 0];
    if (has_proto_term_len()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proto_term_len());
    }

    // optional uint64 proto_reserved0 = 28 [default = 0];
    if (has_proto_reserved0()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved0());
    }

    // optional uint64 proto_reserved1 = 29 [default = 0];
    if (has_proto_reserved1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved1());
    }

    // optional uint64 proto_reserved2 = 30 [default = 0];
    if (has_proto_reserved2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved2());
    }

    // optional uint64 proto_reserved3 = 31 [default = 0];
    if (has_proto_reserved3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved3());
    }

    // optional uint64 proto_reserved4 = 32 [default = 0];
    if (has_proto_reserved4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved4());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional uint64 proto_reserved5 = 33 [default = 0];
    if (has_proto_reserved5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved5());
    }

    // optional uint64 proto_reserved6 = 34 [default = 0];
    if (has_proto_reserved6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_reserved6());
    }

    // optional uint64 proto_FCS = 35 [default = 0];
    if (has_proto_fcs()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proto_fcs());
    }

    // optional bool proto_is_subtype = 36;
    if (has_proto_is_subtype()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_version = 37;
    if (has_proto_is_version()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_tlv_a = 38;
    if (has_proto_is_tlv_a()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_actor_info = 39;
    if (has_proto_is_actor_info()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_tlv_p = 40;
    if (has_proto_is_tlv_p()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional bool proto_is_partner_info = 41;
    if (has_proto_is_partner_info()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_tlv_c = 42;
    if (has_proto_is_tlv_c()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_collector_info = 43;
    if (has_proto_is_collector_info()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_tlv_t = 44;
    if (has_proto_is_tlv_t()) {
      total_size += 2 + 1;
    }

    // optional bool proto_is_terminator_len = 45;
    if (has_proto_is_terminator_len()) {
      total_size += 2 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Lacp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Lacp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Lacp::MergeFrom(const Lacp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_proto_subtype()) {
      set_proto_subtype(from.proto_subtype());
    }
    if (from.has_proto_ver_num()) {
      set_proto_ver_num(from.proto_ver_num());
    }
    if (from.has_proto_tlv_typea()) {
      set_proto_tlv_typea(from.proto_tlv_typea());
    }
    if (from.has_proto_act_info_len()) {
      set_proto_act_info_len(from.proto_act_info_len());
    }
    if (from.has_proto_act_sys_prior()) {
      set_proto_act_sys_prior(from.proto_act_sys_prior());
    }
    if (from.has_proto_asys()) {
      set_proto_asys(from.proto_asys());
    }
    if (from.has_proto_akey()) {
      set_proto_akey(from.proto_akey());
    }
    if (from.has_proto_aport_prior()) {
      set_proto_aport_prior(from.proto_aport_prior());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_proto_aport()) {
      set_proto_aport(from.proto_aport());
    }
    if (from.has_proto_astate()) {
      set_proto_astate(from.proto_astate());
    }
    if (from.has_proto_areserved()) {
      set_proto_areserved(from.proto_areserved());
    }
    if (from.has_proto_tlv_typep()) {
      set_proto_tlv_typep(from.proto_tlv_typep());
    }
    if (from.has_proto_par_info_len()) {
      set_proto_par_info_len(from.proto_par_info_len());
    }
    if (from.has_proto_pstate()) {
      set_proto_pstate(from.proto_pstate());
    }
    if (from.has_proto_par_sys_prior()) {
      set_proto_par_sys_prior(from.proto_par_sys_prior());
    }
    if (from.has_proto_psys()) {
      set_proto_psys(from.proto_psys());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_proto_pkey()) {
      set_proto_pkey(from.proto_pkey());
    }
    if (from.has_proto_pport_prior()) {
      set_proto_pport_prior(from.proto_pport_prior());
    }
    if (from.has_proto_pport()) {
      set_proto_pport(from.proto_pport());
    }
    if (from.has_proto_preserved()) {
      set_proto_preserved(from.proto_preserved());
    }
    if (from.has_proto_tlv_typec()) {
      set_proto_tlv_typec(from.proto_tlv_typec());
    }
    if (from.has_proto_coll_info_len()) {
      set_proto_coll_info_len(from.proto_coll_info_len());
    }
    if (from.has_proto_collmaxdelay()) {
      set_proto_collmaxdelay(from.proto_collmaxdelay());
    }
    if (from.has_proto_creserved0()) {
      set_proto_creserved0(from.proto_creserved0());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_proto_creserved1()) {
      set_proto_creserved1(from.proto_creserved1());
    }
    if (from.has_proto_tlv_typeterm()) {
      set_proto_tlv_typeterm(from.proto_tlv_typeterm());
    }
    if (from.has_proto_term_len()) {
      set_proto_term_len(from.proto_term_len());
    }
    if (from.has_proto_reserved0()) {
      set_proto_reserved0(from.proto_reserved0());
    }
    if (from.has_proto_reserved1()) {
      set_proto_reserved1(from.proto_reserved1());
    }
    if (from.has_proto_reserved2()) {
      set_proto_reserved2(from.proto_reserved2());
    }
    if (from.has_proto_reserved3()) {
      set_proto_reserved3(from.proto_reserved3());
    }
    if (from.has_proto_reserved4()) {
      set_proto_reserved4(from.proto_reserved4());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_proto_reserved5()) {
      set_proto_reserved5(from.proto_reserved5());
    }
    if (from.has_proto_reserved6()) {
      set_proto_reserved6(from.proto_reserved6());
    }
    if (from.has_proto_fcs()) {
      set_proto_fcs(from.proto_fcs());
    }
    if (from.has_proto_is_subtype()) {
      set_proto_is_subtype(from.proto_is_subtype());
    }
    if (from.has_proto_is_version()) {
      set_proto_is_version(from.proto_is_version());
    }
    if (from.has_proto_is_tlv_a()) {
      set_proto_is_tlv_a(from.proto_is_tlv_a());
    }
    if (from.has_proto_is_actor_info()) {
      set_proto_is_actor_info(from.proto_is_actor_info());
    }
    if (from.has_proto_is_tlv_p()) {
      set_proto_is_tlv_p(from.proto_is_tlv_p());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_proto_is_partner_info()) {
      set_proto_is_partner_info(from.proto_is_partner_info());
    }
    if (from.has_proto_is_tlv_c()) {
      set_proto_is_tlv_c(from.proto_is_tlv_c());
    }
    if (from.has_proto_is_collector_info()) {
      set_proto_is_collector_info(from.proto_is_collector_info());
    }
    if (from.has_proto_is_tlv_t()) {
      set_proto_is_tlv_t(from.proto_is_tlv_t());
    }
    if (from.has_proto_is_terminator_len()) {
      set_proto_is_terminator_len(from.proto_is_terminator_len());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Lacp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp::CopyFrom(const Lacp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp::IsInitialized() const {

  return true;
}

void Lacp::Swap(Lacp* other) {
  if (other != this) {
    std::swap(proto_subtype_, other->proto_subtype_);
    std::swap(proto_ver_num_, other->proto_ver_num_);
    std::swap(proto_tlv_typea_, other->proto_tlv_typea_);
    std::swap(proto_act_info_len_, other->proto_act_info_len_);
    std::swap(proto_act_sys_prior_, other->proto_act_sys_prior_);
    std::swap(proto_asys_, other->proto_asys_);
    std::swap(proto_akey_, other->proto_akey_);
    std::swap(proto_aport_prior_, other->proto_aport_prior_);
    std::swap(proto_aport_, other->proto_aport_);
    std::swap(proto_astate_, other->proto_astate_);
    std::swap(proto_areserved_, other->proto_areserved_);
    std::swap(proto_tlv_typep_, other->proto_tlv_typep_);
    std::swap(proto_par_info_len_, other->proto_par_info_len_);
    std::swap(proto_pstate_, other->proto_pstate_);
    std::swap(proto_par_sys_prior_, other->proto_par_sys_prior_);
    std::swap(proto_psys_, other->proto_psys_);
    std::swap(proto_pkey_, other->proto_pkey_);
    std::swap(proto_pport_prior_, other->proto_pport_prior_);
    std::swap(proto_pport_, other->proto_pport_);
    std::swap(proto_preserved_, other->proto_preserved_);
    std::swap(proto_tlv_typec_, other->proto_tlv_typec_);
    std::swap(proto_coll_info_len_, other->proto_coll_info_len_);
    std::swap(proto_collmaxdelay_, other->proto_collmaxdelay_);
    std::swap(proto_creserved0_, other->proto_creserved0_);
    std::swap(proto_creserved1_, other->proto_creserved1_);
    std::swap(proto_tlv_typeterm_, other->proto_tlv_typeterm_);
    std::swap(proto_term_len_, other->proto_term_len_);
    std::swap(proto_reserved0_, other->proto_reserved0_);
    std::swap(proto_reserved1_, other->proto_reserved1_);
    std::swap(proto_reserved2_, other->proto_reserved2_);
    std::swap(proto_reserved3_, other->proto_reserved3_);
    std::swap(proto_reserved4_, other->proto_reserved4_);
    std::swap(proto_reserved5_, other->proto_reserved5_);
    std::swap(proto_reserved6_, other->proto_reserved6_);
    std::swap(proto_fcs_, other->proto_fcs_);
    std::swap(proto_is_subtype_, other->proto_is_subtype_);
    std::swap(proto_is_version_, other->proto_is_version_);
    std::swap(proto_is_tlv_a_, other->proto_is_tlv_a_);
    std::swap(proto_is_actor_info_, other->proto_is_actor_info_);
    std::swap(proto_is_tlv_p_, other->proto_is_tlv_p_);
    std::swap(proto_is_partner_info_, other->proto_is_partner_info_);
    std::swap(proto_is_tlv_c_, other->proto_is_tlv_c_);
    std::swap(proto_is_collector_info_, other->proto_is_collector_info_);
    std::swap(proto_is_tlv_t_, other->proto_is_tlv_t_);
    std::swap(proto_is_terminator_len_, other->proto_is_terminator_len_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Lacp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Lacp_descriptor_;
  metadata.reflection = Lacp_reflection_;
  return metadata;
}

::google::protobuf::internal::ExtensionIdentifier< ::OstProto::Protocol,
    ::google::protobuf::internal::MessageTypeTraits< ::OstProto::Lacp >, 11, false >
  lacp(kLacpFieldNumber, ::OstProto::Lacp::default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

// @@protoc_insertion_point(global_scope)
