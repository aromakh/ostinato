#############################################################################
# Makefile for building: drone
# Generated by qmake (2.01a) (Qt 4.8.1) on: Thu May 1 12:20:25 2014
# Project:  drone.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile.drone drone.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DHAVE_REMOTE -DWPCAP -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtScript -I/usr/include/qt4 -I../rpc -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lpcap -L../common -lostproto -L../rpc -lpbrpc -lm -lprotobuf -L../extra/qhexedit2/$(OBJECTS_DIR)/ -lqhexedit2 -lQtScript -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = drone_main.cpp \
		drone.cpp \
		portmanager.cpp \
		abstractport.cpp \
		pcapport.cpp \
		bsdport.cpp \
		linuxport.cpp \
		winpcapport.cpp \
		myservice.cpp \
		pcapextra.cpp \
		version.cpp moc_drone.cpp \
		qrc_drone.cpp
OBJECTS       = drone_main.o \
		drone.o \
		portmanager.o \
		abstractport.o \
		pcapport.o \
		bsdport.o \
		linuxport.o \
		winpcapport.o \
		myservice.o \
		pcapextra.o \
		version.o \
		moc_drone.o \
		qrc_drone.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../install.pri \
		../version.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		drone.pro
QMAKE_TARGET  = drone
DESTDIR       = 
TARGET        = drone

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.drone $(TARGET)

$(TARGET): ui_drone.h $(OBJECTS)  ../common/libostproto.a ../rpc/libpbrpc.a version.cpp
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile.drone: drone.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../install.pri \
		../version.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtScript.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile.drone drone.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../install.pri:
../version.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtScript.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile.drone drone.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/drone1.0.0 || $(MKDIR) .tmp/drone1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/drone1.0.0/ && $(COPY_FILE) --parents drone.h .tmp/drone1.0.0/ && $(COPY_FILE) --parents drone.qrc .tmp/drone1.0.0/ && $(COPY_FILE) --parents drone_main.cpp drone.cpp portmanager.cpp abstractport.cpp pcapport.cpp bsdport.cpp linuxport.cpp winpcapport.cpp myservice.cpp pcapextra.cpp version.cpp .tmp/drone1.0.0/ && $(COPY_FILE) --parents drone.ui .tmp/drone1.0.0/ && (cd `dirname .tmp/drone1.0.0` && $(TAR) drone1.0.0.tar drone1.0.0 && $(COMPRESS) drone1.0.0.tar) && $(MOVE) `dirname .tmp/drone1.0.0`/drone1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/drone1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) object_script.* version.cpp
	-$(DEL_FILE) Makefile.drone


version.cpp: drone_main.cpp drone.cpp portmanager.cpp abstractport.cpp pcapport.cpp bsdport.cpp linuxport.cpp winpcapport.cpp myservice.cpp pcapextra.cpp drone.h drone.ui ../common/libostproto.a ../rpc/libpbrpc.a
	echo "const char *version = \"0.5.1\"; const char *revision = \"$(shell hg identify -i)\";" > version.cpp

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_drone.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_drone.cpp
moc_drone.cpp: ui_drone.h \
		drone.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) drone.h -o moc_drone.cpp

compiler_rcc_make_all: qrc_drone.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_drone.cpp
qrc_drone.cpp: drone.qrc \
		icons/portgroup.png
	/usr/bin/rcc -name drone drone.qrc -o qrc_drone.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_drone.h
compiler_uic_clean:
	-$(DEL_FILE) ui_drone.h
ui_drone.h: drone.ui
	/usr/bin/uic-qt4 drone.ui -o ui_drone.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

drone_main.o: drone_main.cpp drone.h \
		ui_drone.h \
		../common/protocolmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o drone_main.o drone_main.cpp

drone.o: drone.cpp drone.h \
		ui_drone.h \
		myservice.h \
		../common/protocol.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o drone.o drone.cpp

portmanager.o: portmanager.cpp portmanager.h \
		abstractport.h \
		../common/protocol.pb.h \
		bsdport.h \
		pcapport.h \
		pcapextra.h \
		linuxport.h \
		winpcapport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o portmanager.o portmanager.cpp

abstractport.o: abstractport.cpp abstractport.h \
		../common/protocol.pb.h \
		../common/streambase.h \
		../common/abstractprotocol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o abstractport.o abstractport.cpp

pcapport.o: pcapport.cpp pcapport.h \
		abstractport.h \
		../common/protocol.pb.h \
		pcapextra.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pcapport.o pcapport.cpp

bsdport.o: bsdport.cpp bsdport.h \
		pcapport.h \
		abstractport.h \
		../common/protocol.pb.h \
		pcapextra.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bsdport.o bsdport.cpp

linuxport.o: linuxport.cpp linuxport.h \
		pcapport.h \
		abstractport.h \
		../common/protocol.pb.h \
		pcapextra.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linuxport.o linuxport.cpp

winpcapport.o: winpcapport.cpp winpcapport.h \
		pcapport.h \
		abstractport.h \
		../common/protocol.pb.h \
		pcapextra.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o winpcapport.o winpcapport.cpp

myservice.o: myservice.cpp myservice.h \
		../common/protocol.pb.h \
		../common/protocollistiterator.h \
		../common/abstractprotocol.h \
		../common/streambase.h \
		../rpc/pbrpccontroller.h \
		portmanager.h \
		abstractport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myservice.o myservice.cpp

pcapextra.o: pcapextra.cpp pcapextra.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pcapextra.o pcapextra.cpp

version.o: version.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o version.o version.cpp

moc_drone.o: moc_drone.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_drone.o moc_drone.cpp

qrc_drone.o: qrc_drone.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_drone.o qrc_drone.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local//bin/ || $(MKDIR) $(INSTALL_ROOT)/usr/local//bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local//bin/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

